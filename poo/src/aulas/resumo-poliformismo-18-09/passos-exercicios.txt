Grupo de Exerc√≠cios 1 ‚Äì Animais
1. Hierarquia de classes

Classe Animal (pai): atributos e comportamentos comuns ‚Üí nome, idade, emitirSom().

Cachorro, Cavalo e Pregui√ßa (filhas): cada uma especializa o comportamento.

Cachorro: som = ‚Äúlatir‚Äù, correr.

Cavalo: som = ‚Äúrelinchar‚Äù, correr.

Pregui√ßa: som = ‚Äúgrunhir‚Äù, subir em √°rvores.

üëâ A ideia √© evitar repeti√ß√£o. Nome e idade ficam na classe Animal, cada subclasse s√≥ implementa o que muda.

2. Programa com polimorfismo

Crie objetos Cachorro, Cavalo, Pregui√ßa.

Coloque todos em uma refer√™ncia de tipo Animal.

Chame emitirSom() sem se preocupar com qual √© o animal ‚Üí cada um responde do seu jeito.

3. Classe Veterin√°rio

M√©todo examinar(Animal animal).

Ele deve chamar o m√©todo emitirSom() do animal passado.

Teste chamando esse m√©todo com um cachorro, cavalo e pregui√ßa.

4. Classe Zool√≥gico

Tenha um array de 10 jaulas (Animal[]).

Coloque em cada posi√ß√£o um animal (cachorro, cavalo ou pregui√ßa).

Percorra o array chamando:

emitirSom()

Se for cachorro/cavalo ‚Üí correr()

Se for pregui√ßa ‚Üí subirEmArvores()

üëâ Aqui voc√™ aplica o polimorfismo e tamb√©m identifica o tipo para chamar comportamentos espec√≠ficos.





Grupo de Exerc√≠cios 2 ‚Äì Funcion√°rios e Escolaridade
5. Registro da vida acad√™mica

Classe Funcion√°rio (pai): atributos b√°sicos ‚Üí nome, codigoFuncional.

Crie subclasses ou n√≠veis que adicionam informa√ß√µes:

Funcion√°rio b√°sico: s√≥ nome e c√≥digo.

Ensino B√°sico: adiciona escola.

Ensino M√©dio: tamb√©m escola.

Gradua√ß√£o: universidade.

üëâ O princ√≠pio √© incrementar as informa√ß√µes conforme aumenta a escolaridade.

6. Renda por escolaridade

Todo funcion√°rio come√ßa com R$ 1000.

Ensino b√°sico: +10% sobre a renda anterior.

Ensino m√©dio: +50% sobre a renda do b√°sico.

Gradua√ß√£o: +100% sobre a renda do m√©dio.

üëâ Aqui, cada n√≠vel pode ter um m√©todo que calcula a renda com base no anterior.

7. Simula√ß√£o da empresa

Crie um array com 10 funcion√°rios.

Distribui√ß√£o: 40% ensino b√°sico, 40% ensino m√©dio, 20% gradua√ß√£o.

Calcule:

Custo total da empresa.

Custo por n√≠vel (quanto gastam com b√°sico, m√©dio e superior).

Grupo de Exerc√≠cios 3 ‚Äì Ar-condicionado
8. Sistema de controle de estoque

Pense nas caracter√≠sticas comuns: s√©rie, BTU, cor, voltagem, se √© quente/frio, se tem controle remoto.

Classe base: ArCondicionado.

Subclasses: Parede, Split, Automotivo (cada uma pode ter algo diferente, mas se n√£o for exigido, todas usam os mesmos atributos).

Construtor: inicializa todos os atributos.

No main, crie objetos com os dados da tabela fornecida.

üëâ Aqui o foco √© organizar a modelagem e inicializar corretamente.

Grupo de Exerc√≠cios 4 ‚Äì Publica√ß√µes
9. Classes de publica√ß√µes

Editora: tem nome e site. Deve contar quantas publica√ß√µes j√° foram feitas por ela.

Publicacao (classe base): atributos comuns ‚Üí nome, assunto, edi√ß√£o, editora.

Livro (subclasse): al√©m disso, tem autores (array).

Revista (subclasse): al√©m disso, tem periodicidade.

Rela√ß√£o: Livro e Revista herdam de Publicacao.

Sempre que uma publica√ß√£o √© criada, a Editora aumenta seu contador de publica√ß√µes.

No main, crie as publica√ß√µes e exiba o total de cada editora.

üí° Dicas gerais para todos os grupos

Sempre identifique o que √© comum (vai na classe pai).

O que √© espec√≠fico (fica na subclasse).

Use polimorfismo quando quiser tratar todos de forma gen√©rica.

Use sobrescrita quando cada subclasse tiver comportamento diferente.

Use arrays para simular grupos (10 animais, 10 funcion√°rios, etc.).